{"version":3,"sources":["components/Notification.js","components/Blog.js","components/Togglable.js","components/BlogForm.js","reducers/notificationReducer.js","services/blogs.js","reducers/blogReducer.js","components/Blogs.js","services/login.js","App.js","index.js"],"names":["ConnectedNotifications","connect","state","notification","props","message","text","num","string","className","id","Blog","user","blog","updateLikes","removeBlog","useState","viewAll","setView","style","paddingTop","paddingLeft","border","borderWidth","marginBottom","title","author","type","onClick","url","likes","name","Togglable","React","forwardRef","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","buttonLabel","children","displayName","AddBlogForm","createBlog","setTitle","setAuthor","setUrl","onSubmit","event","preventDefault","value","onChange","target","initialState","IDt","setNotification","time","dispatch","a","setTimeout","data","notificationReducer","action","clearTimeout","baseUrl","token","getAll","axios","get","request","create","newObject","config","headers","Authorization","post","response","like","put","getAll1","setToken","newToken","update","then","remove","delete","reducer","console","log","map","concat","filter","mapDispatchToProps","blogService","newBlog","removedBlog","ConnectedBlogs","blogs","useSelector","blogFormRef","useRef","addBlog","blogObject","current","find","b","window","confirm","sort","reverse","login2","login","credentials","App","useDispatch","useEffect","username","setUsername","password","setPassword","setUser","loggedUserJSON","localStorage","getItem","JSON","parse","handleLogin","loginService","setItem","stringify","handleLogout","removeItem","exception","combineReducers","blogReducer","userReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d52655c9.chunk.js","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\n\n\nconst Notification = (props) => {\n  const message = props.notification.text\n  const num = props.notification.num\n  const string = `error${num}`\n\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className={string} id='error'>\n      {message}\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    notification: state.notification\n  }\n}\n\nconst ConnectedNotifications = connect(mapStateToProps)(Notification)\nexport default ConnectedNotifications","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\n\nconst Blog = ({ user, blog, updateLikes, removeBlog }) => {\n  const [viewAll, setView] = useState(false)\n\n  Blog.propTypes = {\n    user: PropTypes.object.isRequired,\n    blog: PropTypes.object.isRequired,\n    updateLikes: PropTypes.func.isRequired,\n    removeBlog: PropTypes.func.isRequired\n  }\n\n  const blogStyle = {\n    paddingTop: 10,\n    paddingLeft: 2,\n    border: 'solid Violet',\n    borderWidth: 1,\n    marginBottom: 5\n  }\n\n  return (\n    <div style={blogStyle} className='blog'>\n      {viewAll === false\n        ? (<div id='blog1'>\n          <span>\n            <div> {blog.title}\n              <b> {blog.author}</b>\n              <button type=\"button\" onClick={() => setView(true)}>view</button></div>\n          </span>\n        </div>)\n        : (<div id='blog1'>\n          <span>\n            <div> {blog.title}\n              <b> {blog.author}</b>\n              <button type=\"button\" onClick={() => setView(false)}>hide</button>\n              <div>\n                <u>{blog.url}</u>\n                <br></br>\n                <div id='likes'>\n                likes {blog.likes}\n                  <button id='like' type=\"button\" onClick={updateLikes}>like</button>\n                </div>\n                {blog.user.name}\n              </div>\n              {user.name === blog.user.name\n                ? (<div>\n                  <button className={'remove_button'} type=\"button\" onClick={removeBlog}>remove</button>\n                </div>)\n                : (<div></div>)}\n            </div>\n          </span>\n        </div>)}\n    </div>\n  )\n}\n\nexport default Blog","import React, { useState, useImperativeHandle } from 'react'\nimport PropTypes from 'prop-types'\n\n\nconst Togglable = React.forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(false)\n\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  Togglable.propTypes = {\n    buttonLabel: PropTypes.string.isRequired\n  }\n\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility\n    }\n  })\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\n      </div>\n      <div style={showWhenVisible} className=\"togglableContent\">\n        {props.children}\n        <button onClick={toggleVisibility}>cancel</button>\n      </div>\n    </div>\n  )\n})\n\nTogglable.displayName = 'Togglable'\n\nexport default Togglable","import React, { useState } from 'react'\n\nconst AddBlogForm = ({ createBlog }) => {\n  const [title, setTitle] = useState('')\n  const [author, setAuthor] = useState('')\n  const [url, setUrl] = useState('')\n\n  const addBlog = (event) => {\n    event.preventDefault()\n    createBlog({\n      title: title,\n      author: author,\n      url: url,\n    })\n\n    setTitle('')\n    setAuthor('')\n    setUrl('')\n  }\n\n  return (\n    <div>\n      <h2>create new</h2>\n      <form onSubmit={addBlog} id='send'>\n        <div>\n          title\n          <input id='title'\n            type=\"text\"\n            value={title}\n            name=\"title\"\n            onChange={({ target }) => setTitle(target.value)}\n          />\n        </div>\n        <div>\n          author\n          <input id='author'\n            type=\"text\"\n            value={author}\n            name=\"author\"\n            onChange={({ target }) => setAuthor(target.value)}\n          />\n        </div>\n        <div>\n          url\n          <input id='url'\n            type=\"text\"\n            value={url}\n            name=\"url\"\n            onChange={({ target }) => setUrl(target.value)}\n          />\n        </div>\n        <button id='create' type=\"subbmit\">create</button>\n      </form>\n    </div>\n  )\n}\n\nexport default AddBlogForm","const initialState = {\n  text: null,\n  IDt: null,\n  num: 1\n}\n\nconst notificationReducer = (state = initialState, action) => {\n  switch (action.type) {\n  case 'NEW_NOTIFICATION':\n    clearTimeout(state.IDt)\n    return action.data\n  default:\n    return state\n  }\n}\n\nexport const setNotification = (text, time, num) => {\n  return async dispatch => {\n    const IDt = setTimeout(() => {\n      dispatch({\n        type: 'NEW_NOTIFICATION',\n        data: {\n          text: null,\n          IDt: IDt,\n          num: 1\n        },\n      })\n    }, time * 1000)\n\n    dispatch({\n      type: 'NEW_NOTIFICATION',\n      data: {\n        text: text,\n        IDt: IDt,\n        num: num\n      }\n    })\n  }\n}\n\nexport default notificationReducer","import axios from 'axios'\nconst baseUrl = 'api/blogs'\n\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = async () => {\n  const request = await axios.get(baseUrl)\n  return request.data\n}\n\nconst create = async newObject => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst like = async (blog) => {\n  const config = {\n    headers: { Authorization: token }\n  }\n\n  const response = await axios.put(`${baseUrl}/${blog.id}`, { ...blog, likes: blog.likes+1 }, config)\n  return response.data\n}\n\nconst remove = async (id) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  const request = await axios.delete(`${baseUrl}/${id}`,config)\n  return request.data\n}\n\nconst getAll1 = {\n  getAll,\n  setToken,\n  create,\n  update,\n  remove,\n  like,\n}\nexport default getAll1","import blogService from '../services/blogs'\n\n\nexport const createBlog = (blog) => {\n  return async dispatch => {\n    const newBlog = await blogService.create(blog)\n    dispatch({\n      type: 'NEW_BLOG',\n      data: { ...newBlog },\n    })\n  }\n}\n\nexport const like = (blog) => {\n  return async dispatch => {\n    await blogService.like(blog)\n    dispatch({\n      type: 'LIKE',\n      data: { ...blog }\n    })\n  }\n}\n\nexport const remove = (id) => {\n  return async dispatch => {\n    const removedBlog = await blogService.remove(id)\n    console.log(removedBlog)\n    dispatch({\n      type: 'REMOVE',\n      data: id\n    })\n  }\n}\n\nexport const initializeBlogs = () => {\n  return async dispatch => {\n    const blogs = await blogService.getAll()\n    dispatch({\n      type: 'INIT_BLOGS',\n      data: blogs,\n    })\n  }\n}\n\nconst reducer = (state = [], action) => {\n  console.log('state now: ', state)\n  console.log('action', action)\n\n  switch (action.type) {\n  case 'LIKE':\n    return state.map(blog => blog.id === action.data.id ? { ...blog, likes: blog.likes+1 } : blog)\n  case 'NEW_BLOG':\n    return state.concat(action.data)\n  case 'INIT_BLOGS':\n    return action.data\n  case 'REMOVE':\n    console.log(state.filter(blog => blog.id !== action.data.id))\n    return state.filter(blog => blog.id !== action.data)\n  default: return state\n  }\n}\n\nexport default reducer","import React, { useRef } from 'react'\nimport { connect, useSelector } from 'react-redux'\nimport Blog from './Blog'\nimport Togglable from './Togglable'\nimport AddBlogForm from './BlogForm'\nimport { setNotification } from '../reducers/notificationReducer'\nimport { createBlog, like, remove } from '../reducers/blogReducer'\n\n\n\nconst Blogs = (props) => {\n  const blogs = useSelector(state => state.blogs)\n\n  const blogFormRef = useRef()\n\n  const addBlogForm = () => {\n    return (\n      <Togglable buttonLabel=\"new blog\" ref={blogFormRef}>\n        <AddBlogForm\n          createBlog={addBlog}\n        />\n      </Togglable>\n    )\n  }\n\n  const addBlog = (blogObject) => {\n    console.log(blogObject)\n    blogFormRef.current.toggleVisibility()\n    props.createBlog(blogObject)\n    props.setNotification(`a new blog '${blogObject.title}' by ${blogObject.author} added`,5,2)\n  }\n\n  const updateLikes = async (id) => {\n    const blog = blogs.find(b => b.id === id)\n    //const blogObject = { ...blog, likes: (blog.likes +1) }\n    props.like(blog)\n  }\n\n  const removeBlog = async (id) => {\n    const blog = blogs.find(b => b.id === id)\n\n    if (window.confirm(`Remove blog '${blog.title}' by ${blog.author}`)) {\n      props.remove(id)\n      props.setNotification(`Blog '${blog.title}' was succesfully deleted`,5,2)\n    }\n  }\n\n\n  return (\n    <div>\n      {addBlogForm()}\n      <br></br>\n      <div id='blogs'>\n        {blogs.sort((a, b) => a.likes - b.likes).reverse().map(blog => {\n          return <Blog key={blog.id} user={props.user} blog={blog} updateLikes={() => updateLikes(blog.id)} removeBlog={() => removeBlog(blog.id)}/>\n        }\n        )}\n      </div>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = {\n  setNotification,\n  createBlog,\n  like,\n  remove\n}\n\nconst ConnectedBlogs = connect(null, mapDispatchToProps)(Blogs)\nexport default ConnectedBlogs","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nconst login2 = {\n  login\n}\n\nexport default login2","import React, { useState, useEffect } from 'react'\nimport './index.css'\nimport { useDispatch } from 'react-redux'\nimport Notification from './components/Notification'\nimport Blogs from './components/Blogs'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\nimport { setNotification } from './reducers/notificationReducer'\nimport { initializeBlogs } from './reducers/blogReducer'\n\n\nconst App = () => {\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(initializeBlogs())\n  }, [dispatch])\n\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedNoteappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username, password,\n      })\n\n      window.localStorage.setItem(\n        'loggedNoteappUser', JSON.stringify(user)\n      )\n\n      dispatch(setNotification(`welcome ${username}`,5,3))\n\n      blogService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      console.log(exception.message)\n      dispatch(setNotification('wrong username or password',5,1))\n    }\n  }\n\n  const handleLogout = async (event) => {\n    event.preventDefault()\n    try {\n      window.localStorage.removeItem('loggedNoteappUser')\n\n      dispatch(setNotification('you logged out... See you next time',5,3))\n\n      setUser(null)\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      console.log(exception.message)\n      dispatch(setNotification('logout failed',5,1))\n    }\n  }\n\n  if (user === null) {\n    return (\n      <div>\n        <h2>log in to application</h2>\n        <Notification />\n        <form onSubmit={handleLogin}>\n          <div>\n          username\n            <input id='username'\n              type=\"text\"\n              value={username}\n              name=\"Username\"\n              onChange={({ target }) => setUsername(target.value)}\n            />\n          </div>\n          <div>\n          password\n            <input id='password'\n              type=\"password\"\n              value={password}\n              name=\"Password\"\n              onChange={({ target }) => setPassword(target.value)}\n            />\n          </div>\n          <button id='login' type=\"login\">login</button>\n        </form>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <h2>blogs</h2>\n      <Notification />\n      <div>\n        {user.name} logged in\n        <button type=\"button\" onClick={handleLogout}>logout</button>\n      </div>\n      <Blogs user={user}/>\n    </div>\n\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { createStore, combineReducers, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport thunk from 'redux-thunk'\n\nimport blogReducer from './reducers/blogReducer'\nimport notificationReducer from './reducers/notificationReducer'\nimport userReducer from './reducers/userReducer'\n\n\nconst reducer = combineReducers({\n  blogs: blogReducer,\n  notification: notificationReducer,\n  user: userReducer\n})\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n  )\n)\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)"],"sourceRoot":""}